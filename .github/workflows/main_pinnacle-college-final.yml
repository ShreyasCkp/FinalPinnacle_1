name: Build and deploy Python app to Azure Web App - pinnacle-college-final

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    env:
      APP_NAME: pinnacle-college-final
      RESOURCE_GROUP: pinnacle-college-final
      DJANGO_SETTINGS_MODULE: student_alerts_app.deployment

    steps:
      # 1️⃣ Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2️⃣ Install system dependencies for packages like WeasyPrint, Cairo & PostgreSQL
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libcairo2 libcairo2-dev pkg-config \
            libpango-1.0-0 libpangocairo-1.0-0 \
            libgdk-pixbuf2.0-0 libffi-dev libpq-dev \
            shared-mime-info python3-dev \
            libgirepository1.0-dev libjpeg-dev zlib1g-dev

      # 3️⃣ Login to Azure
      - name: Login to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # 4️⃣ Set Azure Web App environment variables
      - name: Set Azure Web App environment variables
        uses: azure/cli@v2
        with:
          azcliversion: latest
          inlineScript: |
            az webapp config appsettings set \
              --name ${{ env.APP_NAME }} \
              --resource-group ${{ env.RESOURCE_GROUP }} \
              --settings \
                DJANGO_SETTINGS_MODULE='${{ env.DJANGO_SETTINGS_MODULE }}' \
                DB_NAME='${{ secrets.DB_NAME }}' \
                DB_USER='${{ secrets.DB_USER }}' \
                DB_PASSWORD='${{ secrets.DB_PASSWORD }}' \
                DB_HOST='${{ secrets.DB_HOST }}' \
                DB_PORT='${{ secrets.DB_PORT }}' \
                EMAIL_HOST_USER='${{ secrets.EMAIL_HOST_USER }}' \
                EMAIL_HOST_PASSWORD='${{ secrets.EMAIL_HOST_PASSWORD }}' \
                MSGKART_API_KEY='${{ secrets.MSGKART_API_KEY }}' \
                MSGKART_EMAIL='${{ secrets.MSGKART_EMAIL }}' \
                MSGKART_PHONE_ID='${{ secrets.MSGKART_PHONE_ID }}' \
                MSGKART_ACCOUNT_ID='${{ secrets.MSGKART_ACCOUNT_ID }}' \
                MSGKART_BASE_URL='${{ secrets.MSGKART_BASE_URL }}'

      # 5️⃣ Enable SCM build during deployment
      - name: Enable build on deployment in Azure
        run: |
          az webapp config appsettings set \
            --name ${{ env.APP_NAME }} \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --settings SCM_DO_BUILD_DURING_DEPLOYMENT=true

      # 6️⃣ Prepare deployment package (source only, no venv)
      - name: Prepare deployment package
        run: |
          mkdir deploy
          rsync -av --progress ./ \
            --exclude '.git' \
            --exclude '__pycache__' \
            --exclude '.github' \
            --exclude 'deploy' \
            ./deploy/

      # 7️⃣ Wait a few seconds to avoid container restart conflicts
      - name: Wait for Azure Web App to stabilize
        run: sleep 15

      # 8️⃣ Deploy source code using ZIP deploy (SCM build will install dependencies)
      - name: Deploy Django app to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.APP_NAME }}
          slot-name: 'Production'
          package: ./deploy

      # ✅ Optional: Set post-deploy command for migrations and collectstatic
      - name: Set post-deploy startup script
        uses: azure/cli@v2
        with:
          azcliversion: latest
          inlineScript: |
            az webapp config appsettings set \
              --name ${{ env.APP_NAME }} \
              --resource-group ${{ env.RESOURCE_GROUP }} \
              --settings STARTUP_CMD="python3 manage.py migrate --noinput && python3 manage.py collectstatic --noinput && gunicorn student_alerts_app.wsgi:application"
