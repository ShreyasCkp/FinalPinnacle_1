name: Build and deploy Python app to Azure Web App - pinnacle-college-final

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    env:
      APP_NAME: pinnacle-college-final
      RESOURCE_GROUP: pinnacle-college
      DJANGO_SETTINGS_MODULE: student_alerts_app.deployment
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_PORT: ${{ secrets.DB_PORT }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install system dependencies for WeasyPrint & PostgreSQL
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libcairo2 \
            libpango-1.0-0 \
            libpangocairo-1.0-0 \
            libgdk-pixbuf2.0-0 \
            libffi-dev \
            libpq-dev \
            shared-mime-info

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Clear pip cache (prevent ZIP errors)
        run: rm -rf ~/.cache/pip

      - name: Create virtual environment and install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          # Ensure PostgreSQL driver is installed
          echo "psycopg2-binary==2.9.9" >> requirements.txt
          pip install -r requirements.txt

      - name: Run collectstatic
        env:
          DJANGO_SETTINGS_MODULE: ${{ env.DJANGO_SETTINGS_MODULE }}
        run: |
          source venv/bin/activate
          python manage.py collectstatic --noinput || true

      - name: Run Django migrations
        env:
          DJANGO_SETTINGS_MODULE: ${{ env.DJANGO_SETTINGS_MODULE }}
        run: |
          source venv/bin/activate
          python manage.py migrate --noinput

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_947BB4DEA5B14B9CBF177985A0D9D75B }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_EDE88DCF06254615AB8F130C24D59BC5 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_8F8B89E4B4844020AD6054725D3AED37 }}

      - name: Set Azure Web App environment variables
        uses: azure/cli@v1
        with:
          inlineScript: |
            az webapp config appsettings set \
              --name ${{ env.APP_NAME }} \
              --resource-group ${{ env.RESOURCE_GROUP }} \
              --settings \
              DB_NAME='${{ secrets.DB_NAME }}' \
              DB_USER='${{ secrets.DB_USER }}' \
              DB_PASSWORD='${{ secrets.DB_PASSWORD }}' \
              DB_HOST='${{ secrets.DB_HOST }}' \
              DB_PORT='${{ secrets.DB_PORT }}'

      - name: Prepare deployment package
        run: |
          mkdir deploy
          cp -r manage.py requirements.txt student_alerts_app static templates deploy/

      - name: Deploy Django app to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.APP_NAME }}
          slot-name: 'Production'
          package: ./deploy
