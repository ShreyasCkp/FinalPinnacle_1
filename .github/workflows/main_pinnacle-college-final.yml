name: Build and deploy Python app to Azure Web App - pinnacle-college-final

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  AZURE_WEBAPP_NAME: pinnacle-college-final
  AZURE_SLOT_NAME: Production
  DEPLOY_PACKAGE: release.zip

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install system build deps
        run: |
          sudo apt-get update -y
          sudo apt-get install -y build-essential python3-dev pkg-config \
            libcairo2-dev libgirepository1.0-dev libpango1.0-dev \
            libgdk-pixbuf2.0-dev libffi-dev libpq-dev

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Build wheelhouse
        run: |
          python -m pip install --upgrade pip setuptools wheel
          mkdir -p wheels
          # Make sure mysqlclient is ignored if present
          grep -v "mysqlclient" requirements.txt > requirements_postgres.txt
          pip wheel --wheel-dir wheels -r requirements_postgres.txt

      - name: Prepare deployment package
        run: |
          mkdir -p deploy
          rsync -av --progress . deploy/ --exclude deploy --exclude .git --exclude .github --exclude antenv
          mkdir -p deploy/wheels
          cp -r wheels/* deploy/wheels/
          cd deploy
          zip -r ../${{ env.DEPLOY_PACKAGE }} .
          cd ..

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: ${{ env.DEPLOY_PACKAGE }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: python-app
          path: .

      - name: Azure Login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_947BB4DEA5B14B9CBF177985A0D9D75B }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_EDE88DCF06254615AB8F130C24D59BC5 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_8F8B89E4B4844020AD6054725D3AED37 }}

      - name: Deploy to Azure Web App (zip deploy)
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          slot-name: ${{ env.AZURE_SLOT_NAME }}
          package: ${{ env.DEPLOY_PACKAGE }}
          startup-command: >
            bash -c "
            python -m pip install --upgrade pip &&
            pip install --no-index --find-links /home/site/wwwroot/wheels -r /home/site/wwwroot/requirements.txt &&
            python /home/site/wwwroot/manage.py migrate --noinput &&
            python /home/site/wwwroot/manage.py collectstatic --noinput &&
            exec gunicorn student_alerts_app.wsgi:application --bind=0.0.0.0 --timeout 600
            "
