name: Deploy Django App to Azure Web App

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      APP_NAME: pinnacle-college-final
      RESOURCE_GROUP: pinnacle-college-final
      DJANGO_SETTINGS_MODULE: student_alerts_app.deployment

    steps:
      # 1️⃣ Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2️⃣ Install system dependencies for Cairo, Pango, etc.
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libcairo2 libcairo2-dev libpango-1.0-0 libpangocairo-1.0-0 \
            libgdk-pixbuf2.0-0 libffi-dev libjpeg-dev zlib1g-dev fonts-dejavu-core build-essential

      # 3️⃣ Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      # 4️⃣ Install Python dependencies
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # 5️⃣ Run migrations and collect static
      - name: Django setup
        run: |
          python manage.py migrate --noinput
          python manage.py collectstatic --noinput

      # 6️⃣ Prepare deployment folder
      - name: Prepare deployment package
        run: |
          mkdir deploy
          rsync -av --progress ./ \
            --exclude '.git' \
            --exclude '__pycache__' \
            --exclude '.github' \
            --exclude 'deploy' \
            ./deploy/

      # 7️⃣ Deploy using ZIP deploy
      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.APP_NAME }}
          slot-name: 'Production'
          package: ./deploy

      # 8️⃣ Set startup command
      - name: Set startup command
        uses: azure/cli@v2
        with:
          azcliversion: latest
          inlineScript: |
            az webapp config set \
              --name ${{ env.APP_NAME }} \
              --resource-group ${{ env.RESOURCE_GROUP }} \
              --startup-file "python3 manage.py migrate --noinput && python3 manage.py collectstatic --noinput && gunicorn student_alerts_app.wsgi:application --bind=0.0.0.0 --timeout 600"
