name: Build and Deploy Django App to Azure Web App

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  APP_NAME: pinnacle-college-final
  RESOURCE_GROUP: pinnacle-college-final
  PYTHON_VERSION: '3.9'
  DJANGO_SETTINGS_MODULE: student_alerts_app.deployment

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Checkout repository
      - name: Checkout code
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Setup Python
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      # 3Ô∏è‚É£ Cache pip dependencies
      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # 4Ô∏è‚É£ Install Python dependencies
      - name: Install Python dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt

      # 5Ô∏è‚É£ Run Django migrations locally (optional, mostly for check)
      - name: Run Django migrations locally
        env:
          DJANGO_SETTINGS_MODULE: ${{ env.DJANGO_SETTINGS_MODULE }}
        run: |
          source venv/bin/activate
          python manage.py makemigrations
          python manage.py migrate --noinput

      # 6Ô∏è‚É£ Collect static files locally
      - name: Collect static files locally
        env:
          DJANGO_SETTINGS_MODULE: ${{ env.DJANGO_SETTINGS_MODULE }}
        run: |
          source venv/bin/activate
          python manage.py collectstatic --noinput

      # 7Ô∏è‚É£ Clean project for ZIP deploy
      - name: Prepare clean deployment ZIP
        run: |
          # Remove venv, caches, git, github, pycache
          rm -rf venv __pycache__ *.pyc *.pyo .git .github
          # Optional: remove any old tar/zip
          rm -f output.zip
          # Create ZIP of all project files
          zip -r output.zip . -x "media/*" "uploads/*"

      # 8Ô∏è‚É£ Azure login
      - name: Azure login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # 9Ô∏è‚É£ Set Azure Web App environment variables
      - name: Set Azure Web App environment variables
        uses: azure/cli@v1
        with:
          inlineScript: |
            az webapp config appsettings set \
              --name ${{ env.APP_NAME }} \
              --resource-group ${{ env.RESOURCE_GROUP }} \
              --settings \
              DJANGO_SETTINGS_MODULE=${{ env.DJANGO_SETTINGS_MODULE }} \
              DB_NAME='${{ secrets.DB_NAME }}' \
              DB_USER='${{ secrets.DB_USER }}' \
              DB_PASSWORD='${{ secrets.DB_PASSWORD }}' \
              DB_HOST='${{ secrets.DB_HOST }}' \
              DB_PORT='${{ secrets.DB_PORT }}' \
              SECRET_KEY='${{ secrets.SECRET_KEY }}' \
              DEBUG=False \
              ALLOWED_HOSTS='${{ secrets.ALLOWED_HOSTS }}' \
              SECURE_SSL_REDIRECT=False \
              SESSION_COOKIE_SECURE=False \
              CSRF_COOKIE_SECURE=False

      # üîü Deploy Django app via ZIP deploy
      - name: Deploy Django app to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.APP_NAME }}
          slot-name: Production
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE }}
          package: output.zip

      # 1Ô∏è‚É£1Ô∏è‚É£ Set Startup Command (Gunicorn)
      - name: Set Startup Command
        uses: azure/cli@v1
        with:
          inlineScript: |
            az webapp config set \
              --name ${{ env.APP_NAME }} \
              --resource-group ${{ env.RESOURCE_GROUP }} \
              --startup-file "gunicorn student_alerts_app.wsgi:application --bind 0.0.0.0:\$PORT --timeout 180"
